# Dialog script for asset_loader::1.2 automatically generated

{
    name	asset_loader::1.2
    script	asset_loader::1.2
    label	"Megascans Asset Loader"

    help {
	""
    }

    inputlabel	1	geometry
    inputlabel	2	"Sub-Network Input #2"
    inputlabel	3	"Sub-Network Input #3"
    inputlabel	4	"Sub-Network Input #4"
    outputlabel	1	geometry

    parm {
        name    "input_data"
        label   "json read"
        type    string
        default { "`details(opinputpath(\".\",0),\"json\")`" }
        hidewhen "{ 1 != 0 }"
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "open_bridge"
        label   "Open Bridge Application"
        type    button
        joinnext
        default { "0" }
        parmtag { "script_callback" "hou.phm().loader.start_bridge()" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "connect"
        label   "connect"
        type    button
        joinnext
        default { "0" }
        parmtag { "script_callback" "hou.phm().loader.connect_chng()" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "type"
        label   "type"
        type    integer
        invisible
        default { "0" }
        menu {
            "0" "geometry"
            "1" "atlas"
            "2" "surface"
        }
        range   { 0 10 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "json"
        label   "json file"
        type    file
        joinnext
        default { "" }
        disablewhen "{ input_data != \"\" }"
        parmtag { "filechooser_pattern" "*.json" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "load"
        label   "LOAD"
        type    button
        default { "0" }
        parmtag { "script_callback" "hou.phm().loader.loadasset(hou.pwd())" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "name"
        label   "name"
        type    string
        joinnext
        default { "" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "preview"
        label   "preview"
        type    button
        joinnext
        default { "0" }
        parmtag { "script_callback" "hou.phm().loader.preview(hou.pwd())" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "stick"
        label   "stick"
        type    toggle
        default { "0" }
        parmtag { "script_callback" "hou.phm().loader.stickprev(hou.pwd())" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "prv_path"
        label   "preview"
        type    string
        invisible
        default { "" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "category"
        label   "category"
        type    string
        invisible
        default { "surface" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "ver"
        label   "version"
        type    string
        default { "" }
        hidewhen "{ ver == \"\" }"
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "packed"
        label   "load as packed"
        type    toggle
        default { "0" }
        hidewhen "{ surf != 0 }"
        range   { 0! 10 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "scale"
        label   "Uniform Scale"
        type    float
        default { "0.05" }
        hidewhen "{ surf != 0 }"
        range   { 0 10 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "basegroup"
        label   "Group"
        type    string
        default { "" }
        hidewhen "{ category != surface }"
        menutoggle {
            [ "opmenu -l shadergrp basegroup" ]
        }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_action" "import soputils\nkwargs['geometrytype'] = kwargs['node'].parmTuple('grouptype')\nkwargs['inputindex'] = 0\nkwargs['ordered'] = kwargs['node'].parm('ordered').eval()\nsoputils.selectGroupParm(kwargs)" }
        parmtag { "script_action_help" "Select geometry from an available viewport.\nShift-click to turn on Select Groups." }
        parmtag { "script_action_icon" "BUTTONS_reselect" }
    }
    parm {
        name    "scale2"
        label   "Uniform Scale"
        type    float
        default { "1" }
        hidewhen "{ geometry == '' } { category == surface }"
        range   { 0 10 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    group {
        name    "parameters"
        label   "parameters"

        parm {
            name    "size"
            label   "size"
            type    vector
            invisible
            size    3
            default { "0" "0" "0" }
            range   { -1 1 }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "textures_array"
            label   "textures_array"
            type    toggle
            default { "0" }
            hidewhen "{ type == 0 }"
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "re_scale"
            label   "resize mesh"
            type    toggle
            default { "1" }
            hidewhen "{ type != 0 }"
            range   { 0! 10 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "recomputen"
            label   "recopute normal"
            type    toggle
            default { "0" }
            hidewhen "{ type != 0 }"
            range   { 0! 10 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "movetocentr"
            label   "move to centroid"
            type    toggle
            default { "0" }
            hidewhen "{ type != 0 }"
            range   { 0! 10 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "use_true"
            label   "use true displace shader"
            type    toggle
            default { "1" }
            disablewhen "{ converted == 1 }"
            range   { 0! 10 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "use_opacity"
            label   "use opacity"
            type    toggle
            joinnext
            default { "1" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ opaccolor_texture == \"\" }"
            range   { 0 10 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "parmvop" "1" }
            parmtag { "shaderparmcontexts" "cvex" }
        }
        parm {
            name    "retrace"
            label   "retrace"
            type    toggle
            joinnext
            default { "0" }
            hidewhen "{ opaccolor_texture == \"\" }"
            range   { 0! 10 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback" "hou.phm().loader.packedfromgeo(hou.pwd())" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "semplesize"
            label   "sample size multiply"
            type    float
            joinnext
            default { "1" }
            hidewhen "{ retrace == 0 } { opaccolor_texture == \"\" }"
            range   { 0.1! 1 }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "usefilter"
            label   "filter"
            type    toggle
            joinnext
            default { "on" }
            hidewhen "{ retrace == 0 } { opaccolor_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "parmvop" "1" }
            parmtag { "shaderparmcontexts" "cvex" }
        }
        parm {
            name    "use_sss"
            label   "use sss"
            type    toggle
            default { "0" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ sss_texture == \"\" }"
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "dispTex_scale"
            label   "Displace Scale"
            type    float
            default { "0" }
            disablewhen "{ converted == 1 }"
            range   { 0 1 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "rough"
            label   "Roughness Scale"
            type    float
            default { "1" }
            disablewhen "{ converted == 1 }"
            range   { 0 1 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "reflect_scale"
            label   "reflect scale"
            type    float
            default { "1" }
            disablewhen "{ converted == 1 }"
            range   { 0 10 }
            parmtag { "script_callback_language" "python" }
        }
    }

    group {
        name    "parameters_1"
        label   "content"

        parm {
            name    "geometry"
            label   "GeometryPath"
            type    geometry
            joinnext
            default { "" }
            disablewhen "{ mergevars == 1 }"
            hidewhen "{ geometry == \"\" }"
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "lods"
            label   "lods"
            type    string
            nolabel
            joinnext
            default { "" }
            hidewhen "{ geometry == \"\" }"
            menu {
                [ "hou.phm().loader.lodslist(hou.pwd())" ]
                language python
            }
            parmtag { "script_callback" "hou.phm().loader.lodset(hou.pwd())" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "mergevars"
            label   "load all vars"
            type    toggle
            default { "0" }
            hidewhen "{ geometry == \"\" }"
            parmtag { "script_callback" "hou.phm().loader.lodslist(hou.pwd());hou.phm().loader.checkidxlods(hou.pwd());hou.phm().loader.packedfromgeo(hou.pwd())" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "albedo_texture"
            label   "Albedo Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ albedo_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "rough_texture"
            label   "Roughness Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ rough_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "ior_texture"
            label   "IOR Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ ior_texture == \"\" }"
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "metallic_texture"
            label   "Metalness Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ metallic_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "reflect_texture"
            label   "Gloss Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ reflect_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "normal_texture"
            label   "Normal Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ normal_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "spec_texture"
            label   "Specular Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ spec_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "normalb_texture"
            label   "Normal Bump"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ normalb_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "bump_texture"
            label   "Bump Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ bump_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "disp_texture"
            label   "Displace Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ disp_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "opaccolor_texture"
            label   "Opacity Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ opaccolor_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "trans_texture"
            label   "Translucency Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ trans_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "ao_texture"
            label   "Ao Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ ao_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "sss_texture"
            label   "SSS Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ sss_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "fuzz_texture"
            label   "Fuzz Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ fuzz_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "mask_texture"
            label   "Mask Map"
            type    image
            default { "" }
            disablewhen "{ converted == 1 }"
            hidewhen "{ mask_texture == \"\" }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_mode" "read_and_write" }
            parmtag { "script_callback_language" "python" }
        }
    }

    group {
        name    "parameters_2"
        label   "utilities"

        parm {
            name    "Textures"
            label   "Textures Utils:"
            type    label
            default { "" }
            parmtag { "export_disable" "1" }
        }
        parm {
            name    "crat"
            label   "convert to rat"
            type    toggle
            joinnext
            default { "1" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "aces"
            label   "aces workflow"
            type    toggle
            joinnext
            default { "1" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "resolution"
            label   " "
            type    string
            nolabel
            joinnext
            default { "2K" }
            menu {
                "1K"    "1K"
                "2K"    "2K"
                "4K"    "4K"
                "8K"    "8K"
            }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "ratconvert"
            label   "resize textures"
            type    button
            default { "0" }
            disablewhen "{ crat == 0 }"
            parmtag { "script_callback" "hou.phm().loader.resizetex(hou.pwd())" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "sepparm2"
            label   "Separator"
            type    separator
            default { "" }
        }
        parm {
            name    "WorkflowUtils"
            label   "Workflow Utils:"
            type    label
            default { "" }
            parmtag { "export_disable" "1" }
        }
        parm {
            name    "execute"
            label   "convert to packed disc"
            type    button
            joinnext
            default { "0" }
            disablewhen "{ type > 1 }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "takecontrol" "always" }
        }
        parm {
            name    "pdisk"
            label   "use packed disk"
            type    toggle
            joinnext
            default { "1" }
            disablewhen "{ type > 1 }"
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "reload"
            label   "Reload Geometry"
            type    button
            default { "0" }
            disablewhen "{ type > 1 } { pdisk != 1 }"
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "count"
            label   "count"
            type    integer
            default { "0" }
            hidewhen "{ 1 != 0 }"
            range   { 0 10 }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "sepparm"
            label   "Separator"
            type    separator
            default { "" }
        }
        parm {
            name    "convertshader"
            label   "convert to shader"
            type    button
            joinnext
            default { "0" }
            parmtag { "script_callback" "hou.phm().loader.convertWF(hou.pwd())" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "shader"
            label   "shader"
            type    string
            nolabel
            joinnext
            default { "" }
            menu {
                [ "hou.phm().loader.shaderoplist(hou.pwd())" ]
                language python
            }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "matn"
            label   "material network"
            type    oppath
            joinnext
            default { "/mat" }
            parmtag { "opfilter" "!!CUSTOM/MATERIAL!!" }
            parmtag { "oprelative" "." }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "converted"
            label   "converted"
            type    toggle
            default { "0" }
            range   { 0! 10 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "setcustom_shader"
            label   "custom shader"
            type    oppath
            default { "`chsop(\"matn\")`/`chsop(\"name\")`" }
            disablewhen "{ converted == 0 }"
            parmtag { "oprelative" "." }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "sepparm4"
            label   "Separator"
            type    separator
            default { "" }
        }
        parm {
            name    "tmp2"
            label   "Label"
            type    label
            nolabel
            default { "" }
        }
        parm {
            name    "Col"
            label   "Collect Utils:"
            type    label
            default { "" }
            parmtag { "export_disable" "1" }
        }
        parm {
            name    "job_path"
            label   "Collect Directory"
            type    directory
            joinnext
            default { "$JOB/library/megascans/`chs(\"category\")`/`chs(\"name\")`" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "collected"
            label   "collected"
            type    toggle
            default { "0" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "collect"
            label   "collect"
            type    button
            joinnext
            default { "0" }
            parmtag { "script_callback" "hou.phm().loader.collect(hou.pwd())" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "bake"
            label   "bake"
            type    button
            default { "0" }
            parmtag { "script_callback" "hou.phm().loader.bake(hou.pwd())" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "tmp"
            label   "Label"
            type    label
            nolabel
            default { "" }
        }
        parm {
            name    "sepparm3"
            label   "Separator"
            type    separator
            default { "" }
        }
    }

    parm {
        name    "help"
        label   "Label"
        type    label
        nolabel
        default { "Для работы и рендеринга на ферме ассет необходимо сколлектить в проект!!!" }
    }
}
